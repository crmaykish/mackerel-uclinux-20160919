#!/bin/sh
# This is a shell archive (produced by GNU sharutils 4.2).
# To extract the files from this archive, save it to some FILE, remove
# everything before the `!/bin/sh' line above, then type `sh FILE'.
#
# Made on 1997-07-18 22:53 MDT by <wessels@surf>.
# Source directory was `/usr/people/wessels/Edit/squid-1.2/icons'.
#
# Existing files will *not* be overwritten unless `-c' is specified.
#
# This shar contains:
# length mode       name
# ------ ---------- ------------------------------------------
#    166 -r--r----- anthony-binhex.gif
#    192 -r--r----- anthony-bomb.gif
#    176 -r--r----- anthony-box.gif
#    168 -r--r----- anthony-box2.gif
#    160 -r--r----- anthony-c.gif
#    169 -r--r----- anthony-compressed.gif
#    137 -r--r----- anthony-dir.gif
#    147 -r--r----- anthony-dirup.gif
#    156 -r--r----- anthony-dvi.gif
#    154 -r--r----- anthony-f.gif
#    227 -r--r----- anthony-image.gif
#    204 -r--r----- anthony-image2.gif
#    194 -r--r----- anthony-layout.gif
#    124 -r--r----- anthony-link.gif
#    151 -r--r----- anthony-movie.gif
#    173 -r--r----- anthony-pdf.gif
#    172 -r--r----- anthony-portal.gif
#    162 -r--r----- anthony-ps.gif
#    166 -r--r----- anthony-quill.gif
#    155 -r--r----- anthony-script.gif
#    166 -r--r----- anthony-sound.gif
#    156 -r--r----- anthony-tar.gif
#    164 -r--r----- anthony-tex.gif
#    153 -r--r----- anthony-text.gif
#    163 -r--r----- anthony-unknown.gif
#    154 -r--r----- anthony-xbm.gif
#    168 -r--r----- anthony-xpm.gif
#
save_IFS="${IFS}"
IFS="${IFS}:"
gettext_dir=FAILED
locale_dir=FAILED
first_param="$1"
for dir in $PATH
do
  if test "$gettext_dir" = FAILED && test -f $dir/gettext \
     && ($dir/gettext --version >/dev/null 2>&1)
  then
    set `$dir/gettext --version 2>&1`
    if test "$3" = GNU
    then
      gettext_dir=$dir
    fi
  fi
  if test "$locale_dir" = FAILED && test -f $dir/shar \
     && ($dir/shar --print-text-domain-dir >/dev/null 2>&1)
  then
    locale_dir=`$dir/shar --print-text-domain-dir`
  fi
done
IFS="$save_IFS"
if test "$locale_dir" = FAILED || test "$gettext_dir" = FAILED
then
  echo=echo
else
  TEXTDOMAINDIR=$locale_dir
  export TEXTDOMAINDIR
  TEXTDOMAIN=sharutils
  export TEXTDOMAIN
  echo="$gettext_dir/gettext -s"
fi
if mkdir _sh03044; then
  $echo 'x -' 'creating lock directory'
else
  $echo 'failed to create lock directory'
  exit 1
fi
# ============= anthony-binhex.gif ==============
if test -f 'anthony-binhex.gif' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'anthony-binhex.gif' '(file already exists)'
else
  $echo 'x -' extracting 'anthony-binhex.gif' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 anthony-binhex.gif
M1TE&.#EA%``6`,(``````-S<W"]/3____W"`D+^_OP```````"'Y!`$```4`
M+``````4`!8```-K*+J\];"(0:N=(KX)NN_#%&K<YX55!HD4F%[K8)Z`4-^;
M/`.ZF5M`"F%(`.2*)H*%:)3T3,%B#A!05GA`J=,VBS9+R(YU^1V,@^1IC<+U
?JKO9\A6+UI;@:6='U([_T&X2`D2$A4,V$3N*30D`.S9+
`
end
SHAR_EOF
  chmod 0440 'anthony-binhex.gif' ||
  $echo 'restore of' 'anthony-binhex.gif' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'anthony-binhex.gif:' 'MD5 check failed'
af42e18b16cc7c0d522862c1a3f0f3e8  anthony-binhex.gif
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'anthony-binhex.gif'`"
    test 166 -eq "$shar_count" ||
    $echo 'anthony-binhex.gif:' 'original size' '166,' 'current size' "$shar_count!"
  fi
fi
# ============= anthony-bomb.gif ==============
if test -f 'anthony-bomb.gif' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'anthony-bomb.gif' '(file already exists)'
else
  $echo 'x -' extracting 'anthony-bomb.gif' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 anthony-bomb.gif
M1TE&.#EA%``6`,(``````+Z^OB]/3______7`'"`D+^_OP```"'Y!`$```8`
M+``````4`!8```.%*+J\]M"(0:N=(KYI.\_11`S`,%;<`&[5>5W0!!`"45:`
MD.\L110=@'`(8(T`!5>EP"P4)1?=;<E\IE1(*2"PM%JR@N:6XNQ1A.$!4\<M
M0[^%=D%1<E])S3E=[86OZ75].']:?&84`3ET;(9O%HE:7(UWB$.2DQV9%G9A
,>9YY.A%$HZ1/"0`[
`
end
SHAR_EOF
  chmod 0440 'anthony-bomb.gif' ||
  $echo 'restore of' 'anthony-bomb.gif' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'anthony-bomb.gif:' 'MD5 check failed'
4383bbd438da26abd13003009718aeea  anthony-bomb.gif
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'anthony-bomb.gif'`"
    test 192 -eq "$shar_count" ||
    $echo 'anthony-bomb.gif:' 'original size' '192,' 'current size' "$shar_count!"
  fi
fi
# ============= anthony-box.gif ==============
if test -f 'anthony-box.gif' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'anthony-box.gif' '(file already exists)'
else
  $echo 'x -' extracting 'anthony-box.gif' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 anthony-box.gif
M1TE&.#EA%``6`,(``````+Z^OB]/3RZ+5____W"`D+^_OP```"'Y!`$```8`
M+``````4`!8```-U*+J\]M`(0JN=(KYI.\\1UU4BN(W7!8D48`$"+)\54+@M
MH.\T81<!5V%(O-%^P&"1"#@.AH$HDNE\1J7+IJ0UZ%YCV:I7@208M[YN=_&C
IG$4`-;M0>;_69(O]GM=K62TQ(WL=.!V$*(=_`DN-1#$1.Y*3D@\)`#MN
`
end
SHAR_EOF
  chmod 0440 'anthony-box.gif' ||
  $echo 'restore of' 'anthony-box.gif' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'anthony-box.gif:' 'MD5 check failed'
982cb717724e05c054ba592332976b2a  anthony-box.gif
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'anthony-box.gif'`"
    test 176 -eq "$shar_count" ||
    $echo 'anthony-box.gif:' 'original size' '176,' 'current size' "$shar_count!"
  fi
fi
# ============= anthony-box2.gif ==============
if test -f 'anthony-box2.gif' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'anthony-box2.gif' '(file already exists)'
else
  $echo 'x -' extracting 'anthony-box2.gif' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 anthony-box2.gif
M1TE&.#EA%``6`,(``````+Z^OB]/3RZ+5____W"`D+^_OP```"'Y!`$```8`
M+``````4`!8```-M:+K<_C`:("$HM+);0M9<YVG34(AC!0QFX*:.<*[L*X2G
MH`@$0=>"VVF8X?E8K*!PB-GU?@,EKFDP0J5#`M6*C`8YO6WOF/P6QN(Q33K6
A%MO'+SS=!MS@;B<>@,]7^X!;,DR$3#<;`(F*BXP*"0`[
`
end
SHAR_EOF
  chmod 0440 'anthony-box2.gif' ||
  $echo 'restore of' 'anthony-box2.gif' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'anthony-box2.gif:' 'MD5 check failed'
8b578e9789cd27f087838a18b23166c6  anthony-box2.gif
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'anthony-box2.gif'`"
    test 168 -eq "$shar_count" ||
    $echo 'anthony-box2.gif:' 'original size' '168,' 'current size' "$shar_count!"
  fi
fi
# ============= anthony-c.gif ==============
if test -f 'anthony-c.gif' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'anthony-c.gif' '(file already exists)'
else
  $echo 'x -' extracting 'anthony-c.gif' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 anthony-c.gif
M1TE&.#EA%``6`,(``````"]/3____W"`D+^_OP```````````"'Y!`$```0`
M+``````4`!8```-E&+J\])`$0:N=(;YI.\\1)P#D58$;1:[G!7%EJ08`3:<C
MD%=KC\L=P6`X`/QTP`K1*%$A=4$A$]:+2G$Y:)52Q%HMW6:VQ^).O\$PE5R^
9BM'*\Y@=]\+5</`T0.S[AS<0;(,K#PD`.W$Y
`
end
SHAR_EOF
  chmod 0440 'anthony-c.gif' ||
  $echo 'restore of' 'anthony-c.gif' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'anthony-c.gif:' 'MD5 check failed'
47e22190738a27aa4039ff195b3e25fa  anthony-c.gif
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'anthony-c.gif'`"
    test 160 -eq "$shar_count" ||
    $echo 'anthony-c.gif:' 'original size' '160,' 'current size' "$shar_count!"
  fi
fi
# ============= anthony-compressed.gif ==============
if test -f 'anthony-compressed.gif' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'anthony-compressed.gif' '(file already exists)'
else
  $echo 'x -' extracting 'anthony-compressed.gif' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 anthony-compressed.gif
M1TE&.#EA%``6`,(``````+(B(B]/3_]C1____W"`D+^_OP```"'Y!`$```8`
M+``````4`!8```-N:&K2O3`N00@5,K-*K8Y=YWU*6''D1@`"ZY(=(,\`?!)%
M7M11,)0W7(XW""A\/]%M9Q@4C\Z!\K2+&@U(9[!2B#ZQWL$V?,T6M^:R=8O+
BJHM3+@"I-L9Q-5_Y>F=BKQ!]/!J",`(Z.BTI!C0T$@D`.\$V
`
end
SHAR_EOF
  chmod 0440 'anthony-compressed.gif' ||
  $echo 'restore of' 'anthony-compressed.gif' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'anthony-compressed.gif:' 'MD5 check failed'
13ca8bb5773109a25f5fa4f65e99c62a  anthony-compressed.gif
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'anthony-compressed.gif'`"
    test 169 -eq "$shar_count" ||
    $echo 'anthony-compressed.gif:' 'original size' '169,' 'current size' "$shar_count!"
  fi
fi
# ============= anthony-dir.gif ==============
if test -f 'anthony-dir.gif' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'anthony-dir.gif' '(file already exists)'
else
  $echo 'x -' extracting 'anthony-dir.gif' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 anthony-dir.gif
M1TE&.#EA%``6`,(``````/7>LZ!2+2]/3[^_OP```````````"'Y!`$```0`
M+``````4`!8```-.2+K<_C#*21FX^$X0NN]`Q'UDIBF`0'IJB09"+,<K'(YU
M+0Q7GN\]WPJ($[)X12,,J?P0F\<@]`E=2IM`0FK&Y0YXJ*]X3.8-%J9TYIP`
"`#M7
`
end
SHAR_EOF
  chmod 0440 'anthony-dir.gif' ||
  $echo 'restore of' 'anthony-dir.gif' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'anthony-dir.gif:' 'MD5 check failed'
30206a4b35a70e342cef25b892bed136  anthony-dir.gif
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'anthony-dir.gif'`"
    test 137 -eq "$shar_count" ||
    $echo 'anthony-dir.gif:' 'original size' '137,' 'current size' "$shar_count!"
  fi
fi
# ============= anthony-dirup.gif ==============
if test -f 'anthony-dirup.gif' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'anthony-dirup.gif' '(file already exists)'
else
  $echo 'x -' extracting 'anthony-dirup.gif' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 anthony-dirup.gif
M1TE&.#EA%``6`,(``````/7>LZ!2+2]/3[^_OP```````````"'Y!`$```0`
M+``````4`!8```-82+K<_C#*21FX^$X0NN]`Q'UDIBF`0'IJB09"+,<K'(ZU
MAPO#E>L^6`]7,PF#O\!NF`2QF$I=Z>G#**O(XPA')/&R36WX\R6D9FCTH(=:
,N]_PWF!AJF?F"0`[
`
end
SHAR_EOF
  chmod 0440 'anthony-dirup.gif' ||
  $echo 'restore of' 'anthony-dirup.gif' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'anthony-dirup.gif:' 'MD5 check failed'
264ae666e8bed6eccdbeba55bb5aa8f5  anthony-dirup.gif
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'anthony-dirup.gif'`"
    test 147 -eq "$shar_count" ||
    $echo 'anthony-dirup.gif:' 'original size' '147,' 'current size' "$shar_count!"
  fi
fi
# ============= anthony-dvi.gif ==============
if test -f 'anthony-dvi.gif' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'anthony-dvi.gif' '(file already exists)'
else
  $echo 'x -' extracting 'anthony-dvi.gif' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 anthony-dvi.gif
M1TE&.#EA%``6`,(``````"]/3____W"`D+^_OP```````````"'Y!`$```0`
M+``````4`!8```-A&+J\])`$0:N=(;X)NN_"%&K<YX55!I46*%*J))@G$-CX
M)@ST,-,ZBY`R*/*".Y/%"-#Q:,.C[#1<-F5/I5#ZRH*VUU<5K*-]K65S-#RN
5<MMK))S(GE>X`:-^7[Q%S(!7"0`[
`
end
SHAR_EOF
  chmod 0440 'anthony-dvi.gif' ||
  $echo 'restore of' 'anthony-dvi.gif' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'anthony-dvi.gif:' 'MD5 check failed'
a19a057f846468be9db21a1cabeacaa0  anthony-dvi.gif
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'anthony-dvi.gif'`"
    test 156 -eq "$shar_count" ||
    $echo 'anthony-dvi.gif:' 'original size' '156,' 'current size' "$shar_count!"
  fi
fi
# ============= anthony-f.gif ==============
if test -f 'anthony-f.gif' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'anthony-f.gif' '(file already exists)'
else
  $echo 'x -' extracting 'anthony-f.gif' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 anthony-f.gif
M1TE&.#EA%``6`,(``````"]/3____W"`D+^_OP```````````"'Y!`$```0`
M+``````4`!8```-?&+J\])`$0:N=(;YI.\\1UU4BN%%`FI(7Q*DK&@#S?`JQ
M!:LW/`[``:"G&@F"0PD*8+0(B<W*4XEC5GR4J2@J3;YVV*.7V]$NP3DSN4M$
36\6W-9PJUP:"^#S0!G&['PD`.\W*
`
end
SHAR_EOF
  chmod 0440 'anthony-f.gif' ||
  $echo 'restore of' 'anthony-f.gif' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'anthony-f.gif:' 'MD5 check failed'
30c06990ecae4c7ecae1f405b29871b0  anthony-f.gif
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'anthony-f.gif'`"
    test 154 -eq "$shar_count" ||
    $echo 'anthony-f.gif:' 'original size' '154,' 'current size' "$shar_count!"
  fi
fi
# ============= anthony-image.gif ==============
if test -f 'anthony-image.gif' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'anthony-image.gif' '(file already exists)'
else
  $echo 'x -' extracting 'anthony-image.gif' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 anthony-image.gif
M1TE&.#EA%``6`.,``````!Z0_[(B(KZ^OB]/3RZ+5P``@/]C1____W"`D+^_
MOP```````````````````"'Y!`$```H`+``````4`!8```20D,A)I[I8$<2[
MWT1V;5Y)AAE9=BHZ(D<L'P.BVM@VRP("$+_@:Q?K`8Y(P)#8XR2>":4&-BM8
M"S4$5*J3%3@#:U;+10QBW_"5-(B^!@(!]FK=#`SN:8>^'@3P92Q\"00!?WDW
M`P17A(:'@1V*$XZ/+RMFE)5Z)7Z9@)8>=P:CI)^;ER6(!%"LK4]`&4FRLU(1
"`#M7
`
end
SHAR_EOF
  chmod 0440 'anthony-image.gif' ||
  $echo 'restore of' 'anthony-image.gif' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'anthony-image.gif:' 'MD5 check failed'
78cfc371f01ce9a11534f87ec2c837dd  anthony-image.gif
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'anthony-image.gif'`"
    test 227 -eq "$shar_count" ||
    $echo 'anthony-image.gif:' 'original size' '227,' 'current size' "$shar_count!"
  fi
fi
# ============= anthony-image2.gif ==============
if test -f 'anthony-image2.gif' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'anthony-image2.gif' '(file already exists)'
else
  $echo 'x -' extracting 'anthony-image2.gif' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 anthony-image2.gif
M1TE&.#EA%``6`.,``````!Z0_[(B(B]/3RZ+5P``@/]C1____W"`D+^_OP``
M`````````````````````"'Y!`$```D`+``````4`!8```1Y<,A)9[HXC<.[
MWT-V;5Y)AAE9=BHZ=D(L"^KAJH*A[\#0_R].;J<#&(^`X"''-#`14$12LZI&
MIZW*I"-5#@C@,$'5I7*^XC`7RQJ[OV1VU2H_%.YX_%I9"/C_`05[9G:`@(,J
8?8J!@8AS=$J/B`-1E990/AE(FYQ3$0`[
`
end
SHAR_EOF
  chmod 0440 'anthony-image2.gif' ||
  $echo 'restore of' 'anthony-image2.gif' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'anthony-image2.gif:' 'MD5 check failed'
aaba8674a5053db62e10b84b45c9feb3  anthony-image2.gif
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'anthony-image2.gif'`"
    test 204 -eq "$shar_count" ||
    $echo 'anthony-image2.gif:' 'original size' '204,' 'current size' "$shar_count!"
  fi
fi
# ============= anthony-layout.gif ==============
if test -f 'anthony-layout.gif' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'anthony-layout.gif' '(file already exists)'
else
  $echo 'x -' extracting 'anthony-layout.gif' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 anthony-layout.gif
M1TE&.#EA%``6`.,``````(?.ZZ!2+2]/3_]C1______7`'"`D+^_OP``````
M`````````````````````"'Y!`$```@`+``````4`!8```1O<,A))[H8C<*[
MWT-V;5Y)AME9<62!CJQA!#3[8>=,!QPP^$"8:U<K`(Y(@'`@:#8]A^A!J6$Y
MG]`HM57J%J9";Q=<-2;/'3)7G-[VSLEVF"TO<PCF.$=-+_$[>'!U:W1_?7M;
X.`U*+C%$_&7"12!<1`#O/
`
end
SHAR_EOF
  chmod 0440 'anthony-layout.gif' ||
  $echo 'restore of' 'anthony-layout.gif' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'anthony-layout.gif:' 'MD5 check failed'
7a0161bcf19320e63671bb5718c2f094  anthony-layout.gif
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'anthony-layout.gif'`"
    test 194 -eq "$shar_count" ||
    $echo 'anthony-layout.gif:' 'original size' '194,' 'current size' "$shar_count!"
  fi
fi
# ============= anthony-link.gif ==============
if test -f 'anthony-link.gif' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'anthony-link.gif' '(file already exists)'
else
  $echo 'x -' extracting 'anthony-link.gif' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 anthony-link.gif
M1TE&.#EA%``6`*$``````"]/3W"`D+^_OR'Y!`$```,`+``````4`!8```)-
MG(^I*A$B5FKN/6EH=1#KW43+MSVB4H+7`@PI=R9`ZX+8,`-K<!MYOD+0#K]B
B<"8L*HN'P/*)'`B@T`SUF7%><PQM]=90]A31L=`\+@``.P-K
`
end
SHAR_EOF
  chmod 0440 'anthony-link.gif' ||
  $echo 'restore of' 'anthony-link.gif' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'anthony-link.gif:' 'MD5 check failed'
dc034c34323a0cef5fcbb7dd10290df4  anthony-link.gif
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'anthony-link.gif'`"
    test 124 -eq "$shar_count" ||
    $echo 'anthony-link.gif:' 'original size' '124,' 'current size' "$shar_count!"
  fi
fi
# ============= anthony-movie.gif ==============
if test -f 'anthony-movie.gif' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'anthony-movie.gif' '(file already exists)'
else
  $echo 'x -' extracting 'anthony-movie.gif' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 anthony-movie.gif
M1TE&.#EA%``6`,(``````+Z^OB]/3____W"`D+^_OP```````"'Y!`$```4`
M+``````4`!8```-<"+K<6A"$X-H$(E[".Q\2E16,YX'+&`)F!U[JUA*O&"TS
MS<147F.:WNRG6@R.2.0N6&'`F+Y541%-08?2:XMXHV*M)-DV&Q:.GR1C,KDL
0-Q?HU9M<$-CO^+P=D@``.V'`
`
end
SHAR_EOF
  chmod 0440 'anthony-movie.gif' ||
  $echo 'restore of' 'anthony-movie.gif' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'anthony-movie.gif:' 'MD5 check failed'
8d8a692e445c8c195c5c75304b276325  anthony-movie.gif
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'anthony-movie.gif'`"
    test 151 -eq "$shar_count" ||
    $echo 'anthony-movie.gif:' 'original size' '151,' 'current size' "$shar_count!"
  fi
fi
# ============= anthony-pdf.gif ==============
if test -f 'anthony-pdf.gif' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'anthony-pdf.gif' '(file already exists)'
else
  $echo 'x -' extracting 'anthony-pdf.gif' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 anthony-pdf.gif
M1TE&.#EA%``6`,(``````"]/3_\``/___W"`D+^_OP```````"'Y!`$```4`
M+``````4`!8```-R&+J\];"$0:N=(;YI.\\19PF5"&X=20XB"[6$2@Q`4-_H
M.*Q`[P.Y&46P&A".1Z"DLRM2D,J)<+BK"`G15(7(-69US:(`BYIVAT1O+LR\
F?E5,"WFY<CZM6;CQ+G_'.W,M?WAK@X02`4B*BT<V$3^0D4H)`#MV
`
end
SHAR_EOF
  chmod 0440 'anthony-pdf.gif' ||
  $echo 'restore of' 'anthony-pdf.gif' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'anthony-pdf.gif:' 'MD5 check failed'
7b5afe82b81ce71fde7603add0c6075f  anthony-pdf.gif
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'anthony-pdf.gif'`"
    test 173 -eq "$shar_count" ||
    $echo 'anthony-pdf.gif:' 'original size' '173,' 'current size' "$shar_count!"
  fi
fi
# ============= anthony-portal.gif ==============
if test -f 'anthony-portal.gif' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'anthony-portal.gif' '(file already exists)'
else
  $echo 'x -' extracting 'anthony-portal.gif' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 anthony-portal.gif
M1TE&.#EA%``6`,(``````,V%/[Z^OB]/3______7`'"`D+^_OR'Y!`$```<`
M+``````4`!8```-Q.+J\]_`,0JN=([YI.\\1UU4BN)&-<D&EX;[`$,\G-1A`
MKN]Y3=R`@$X`>.%\MT!!""`28$@<LPFH'"4D7$[HI%Q;O.X3$`T.JUXRUJ8]
E6]7@+?6-%-COXF^%MZ.O1X!Z@(%P@X0;-T:*1C(1?(\Z#PD`.PT.
`
end
SHAR_EOF
  chmod 0440 'anthony-portal.gif' ||
  $echo 'restore of' 'anthony-portal.gif' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'anthony-portal.gif:' 'MD5 check failed'
b65db2f42d4ae0044ccf2bced749e3e5  anthony-portal.gif
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'anthony-portal.gif'`"
    test 172 -eq "$shar_count" ||
    $echo 'anthony-portal.gif:' 'original size' '172,' 'current size' "$shar_count!"
  fi
fi
# ============= anthony-ps.gif ==============
if test -f 'anthony-ps.gif' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'anthony-ps.gif' '(file already exists)'
else
  $echo 'x -' extracting 'anthony-ps.gif' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 anthony-ps.gif
M1TE&.#EA%``6`,(``````"]/3____W"`D+^_OP```````````"'Y!`$```0`
M+``````4`!8```-G&+J\])`$0:N=(;X)NN_"%&K<YX55!HD"V`)HNE8F#`1W
MOE7#-[RFG65(&1A[NYZM\^,9`3N/TF5!2EY8*@]Z]9V&ULGTU:QR641B.,U>
;L]7G-UPHW]+K`C<^?PX<_X!&.!$UA1X/"0`[
`
end
SHAR_EOF
  chmod 0440 'anthony-ps.gif' ||
  $echo 'restore of' 'anthony-ps.gif' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'anthony-ps.gif:' 'MD5 check failed'
ac18ae0d0984eec459878cec544b6d57  anthony-ps.gif
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'anthony-ps.gif'`"
    test 162 -eq "$shar_count" ||
    $echo 'anthony-ps.gif:' 'original size' '162,' 'current size' "$shar_count!"
  fi
fi
# ============= anthony-quill.gif ==============
if test -f 'anthony-quill.gif' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'anthony-quill.gif' '(file already exists)'
else
  $echo 'x -' extracting 'anthony-quill.gif' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 anthony-quill.gif
M1TE&.#EA%``6`,(``````(?.ZR]/3____W"`D+^_OP```````"'Y!`$```4`
M+``````4`!8```-K*+J\];"(0:N=(KYI.U=`"'!=A84!`4CEA1+JUE(O',HM
MD,)JS)8Z7L]'J@1Y``JQ<[15EL:=\[GZ#01250<Z:":WU8_T"\;I!*'9$BL@
?S)3A;OL-EP'<],&23.?F]6%M0H-":!$BB(F(#PD`.R:W
`
end
SHAR_EOF
  chmod 0440 'anthony-quill.gif' ||
  $echo 'restore of' 'anthony-quill.gif' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'anthony-quill.gif:' 'MD5 check failed'
b95a126efb90d179c885263b71363313  anthony-quill.gif
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'anthony-quill.gif'`"
    test 166 -eq "$shar_count" ||
    $echo 'anthony-quill.gif:' 'original size' '166,' 'current size' "$shar_count!"
  fi
fi
# ============= anthony-script.gif ==============
if test -f 'anthony-script.gif' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'anthony-script.gif' '(file already exists)'
else
  $echo 'x -' extracting 'anthony-script.gif' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 anthony-script.gif
M1TE&.#EA%``6`,(``````"]/3____W"`D+^_OP```````````"'Y!`$```0`
M+``````4`!8```-@&+J\])`$0:N=(;YI.\\1UU4BN%6`D)(7Q`$PC`8`39]4
MNN9QC/<[RF`X`.!4R!'1*!DYA4S1TU+\`7N5:G/:T;ZNL6R4VQVKP#+HD2SP
4\M#B-=G-5DL"Q+Q^>(.@T0\)`#O1
`
end
SHAR_EOF
  chmod 0440 'anthony-script.gif' ||
  $echo 'restore of' 'anthony-script.gif' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'anthony-script.gif:' 'MD5 check failed'
1a090281ba78aa7092f9908890012deb  anthony-script.gif
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'anthony-script.gif'`"
    test 155 -eq "$shar_count" ||
    $echo 'anthony-script.gif:' 'original size' '155,' 'current size' "$shar_count!"
  fi
fi
# ============= anthony-sound.gif ==============
if test -f 'anthony-sound.gif' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'anthony-sound.gif' '(file already exists)'
else
  $echo 'x -' extracting 'anthony-sound.gif' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 anthony-sound.gif
M1TE&.#EA%``6`,(``````+(B(KZ^OB]/3_]C1____W"`D+^_OR'Y!`$```<`
M+``````4`!8```-K>+K<_C"VP0B1"H!C58^`L7$7"87%:'X-FG*>=VFT4=Q;
MUP5$:/RVVVMWX;F$P@WOL#0&D3AF<7J$*J?2*O(JS1H&WV_2U)S1`()!5(<]
?#-X#M#H7,TWD*C8D+AA]2GL:=BQ[%`N$&(F*"PD`.QH&
`
end
SHAR_EOF
  chmod 0440 'anthony-sound.gif' ||
  $echo 'restore of' 'anthony-sound.gif' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'anthony-sound.gif:' 'MD5 check failed'
5350a7f6218f61c8ec4c32a8564af8f2  anthony-sound.gif
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'anthony-sound.gif'`"
    test 166 -eq "$shar_count" ||
    $echo 'anthony-sound.gif:' 'original size' '166,' 'current size' "$shar_count!"
  fi
fi
# ============= anthony-tar.gif ==============
if test -f 'anthony-tar.gif' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'anthony-tar.gif' '(file already exists)'
else
  $echo 'x -' extracting 'anthony-tar.gif' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 anthony-tar.gif
M1TE&.#EA%``6`,(``````"]/3____W"`D+^_OP```````````"'Y!`$```0`
M+``````4`!8```-A&+J\])`$0:N=(;YI!0`4ET739WYA-6[>B0I<",75"P1W
MSG:6^[&^SF`X``"#%J)14@.]A,L2$GH\\2C%W9679?I`W&C+=>W&4,^D^%M>
5.]-J[3;.G%,E`:)^/\1%OH!+"0`[
`
end
SHAR_EOF
  chmod 0440 'anthony-tar.gif' ||
  $echo 'restore of' 'anthony-tar.gif' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'anthony-tar.gif:' 'MD5 check failed'
516061955993427e3aa1929d5c9175c6  anthony-tar.gif
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'anthony-tar.gif'`"
    test 156 -eq "$shar_count" ||
    $echo 'anthony-tar.gif:' 'original size' '156,' 'current size' "$shar_count!"
  fi
fi
# ============= anthony-tex.gif ==============
if test -f 'anthony-tex.gif' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'anthony-tex.gif' '(file already exists)'
else
  $echo 'x -' extracting 'anthony-tex.gif' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 anthony-tex.gif
M1TE&.#EA%``6`,(``````"]/3____W"`D+^_OP```````````"'Y!`$```0`
M+``````4`!8```-I&+J\])`$0:N=(;YI*0`"ET739YIA-6[">:8JQ'5?&P#W
MS0[F8+D?EJLC&!AYPI:2>`0D440*4E+Y^*)%)Q7+U)9PE!NH,_T"NZSJ.%IN
=`=>5]D=4(WNYZ"T^?M_S-P%'@H-&.A!OB%H)`#O+
`
end
SHAR_EOF
  chmod 0440 'anthony-tex.gif' ||
  $echo 'restore of' 'anthony-tex.gif' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'anthony-tex.gif:' 'MD5 check failed'
9e2cc5c42025c323b03c3074daef5e31  anthony-tex.gif
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'anthony-tex.gif'`"
    test 164 -eq "$shar_count" ||
    $echo 'anthony-tex.gif:' 'original size' '164,' 'current size' "$shar_count!"
  fi
fi
# ============= anthony-text.gif ==============
if test -f 'anthony-text.gif' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'anthony-text.gif' '(file already exists)'
else
  $echo 'x -' extracting 'anthony-text.gif' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 anthony-text.gif
M1TE&.#EA%``6`,(``````"]/3____W"`D+^_OP```````````"'Y!`$```0`
M+``````4`!8```->&+J\])`$0:N=(;YI.\\1UU4BN(W7!7%`ZU)`$,\G"KMN
MC;?6X`^`FJWR"TINNQ<%*!P2C2R`=#I]-IT"YE%`[0*L6^P2VO%^QU>G5H2D
2@MG8M?@=^-GO/EG$S#<F```[
`
end
SHAR_EOF
  chmod 0440 'anthony-text.gif' ||
  $echo 'restore of' 'anthony-text.gif' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'anthony-text.gif:' 'MD5 check failed'
6115039fc538f0f7212ea17dd9adf34b  anthony-text.gif
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'anthony-text.gif'`"
    test 153 -eq "$shar_count" ||
    $echo 'anthony-text.gif:' 'original size' '153,' 'current size' "$shar_count!"
  fi
fi
# ============= anthony-unknown.gif ==============
if test -f 'anthony-unknown.gif' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'anthony-unknown.gif' '(file already exists)'
else
  $echo 'x -' extracting 'anthony-unknown.gif' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 anthony-unknown.gif
M1TE&.#EA%``6`,(``````"]/3____W"`D+^_OP```````````"'Y!`$```0`
M+``````4`!8```-H&+J\])`$0:N=(;YI.\\1)PP#8)HBN%'E>8J"RK4N"@0W
ML`KN,-:GG:O2(^DDG0H-0"KM+$L3ZPC[U7R_)P6(S2(MO8[S2SPEQ]4DE-H9
<BME@\UO+DZ_I:B4\/Y<$FH"!)#@10(9!!`D`.P6(
`
end
SHAR_EOF
  chmod 0440 'anthony-unknown.gif' ||
  $echo 'restore of' 'anthony-unknown.gif' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'anthony-unknown.gif:' 'MD5 check failed'
f8ec9ff9f4eb30d34b29ac1b10a84aae  anthony-unknown.gif
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'anthony-unknown.gif'`"
    test 163 -eq "$shar_count" ||
    $echo 'anthony-unknown.gif:' 'original size' '163,' 'current size' "$shar_count!"
  fi
fi
# ============= anthony-xbm.gif ==============
if test -f 'anthony-xbm.gif' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'anthony-xbm.gif' '(file already exists)'
else
  $echo 'x -' extracting 'anthony-xbm.gif' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 anthony-xbm.gif
M1TE&.#EA%``6`,(``````"]/3____W"`D+^_OP```````````"'Y!`$```0`
M+``````4`!8```-?&+J\])`$0:N=(;YI.\\1UU4BN(W7!8D48`$!+)\58-=V
M#M""[E:#X&`G:?E^%"%Q<LQUACS4<XER6J#%CN]*?1V!7=PV&3:.!5B6^0:.
3BJ=N*3DN3P>$^'PP%FGZB0D`.SS4
`
end
SHAR_EOF
  chmod 0440 'anthony-xbm.gif' ||
  $echo 'restore of' 'anthony-xbm.gif' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'anthony-xbm.gif:' 'MD5 check failed'
9f2ec7af479158b89912fc67c7886770  anthony-xbm.gif
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'anthony-xbm.gif'`"
    test 154 -eq "$shar_count" ||
    $echo 'anthony-xbm.gif:' 'original size' '154,' 'current size' "$shar_count!"
  fi
fi
# ============= anthony-xpm.gif ==============
if test -f 'anthony-xpm.gif' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'anthony-xpm.gif' '(file already exists)'
else
  $echo 'x -' extracting 'anthony-xpm.gif' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 anthony-xpm.gif
M1TE&.#EA%``6`,(``````"]/3_\``/___W"`D+^_OP``_P```"'Y!`$```4`
M+``````4`!8```-M&+J\];"$0:N=(;YI.\\1UU4BN(W7!8D48`$!+)\5(+@M
MH._T8`LW"V%(`-!^P&"%:)3X=E#<LLE"":FH7:?8JQF^T@'7^?J:I>,JP`R>
A=GUL`QK;6;?=Y+IN2[?RWWYB5`%$A89#,1%1BU$/"0`[
`
end
SHAR_EOF
  chmod 0440 'anthony-xpm.gif' ||
  $echo 'restore of' 'anthony-xpm.gif' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'anthony-xpm.gif:' 'MD5 check failed'
8d2724de7e9e46198a9dd3e805b18a02  anthony-xpm.gif
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'anthony-xpm.gif'`"
    test 168 -eq "$shar_count" ||
    $echo 'anthony-xpm.gif:' 'original size' '168,' 'current size' "$shar_count!"
  fi
fi
rm -fr _sh03044
exit 0
